<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper
  PUBLIC "-//www.mybatis.org//DTD Mapper 3.0//EN"
  "http://www.mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="Login">
<!-- (메인) 공고 4개뽑아오기 -->
<select id="mainTopRecruit" resultType="model.RecruitDto">
	SELECT * FROM RECRUIT WHERE DEL=0 ORDER BY READCOUNT DESC LIMIT 4
</select>
<!-- (메인) 추천기업 4개뽑아오기 -->
<select id="mainTopCompany" resultType="model.CMemberDto">
select c.seq, c.name, c.department, c.logoname, c.logopath from c_member c 
inner join (select count(*) as count, LIKEPICKSEQ as seq from favorite
where auth = 1
group by LIKEPICKSEQ
order by count desc ) f on c.seq = f.seq 
limit 4
</select>
<!-- (메인) 공지사항 4개 뽑아오기 -->
<select id="getMainNotice" resultType="model.NoticeDto">
select * from notice
order by wdate desc limit 4
</select>

<!-- 일반회원 이메일 체크 -->
<select id="emailCheckA" parameterType="model.AMemberDto" resultType="model.AMemberDto">
SELECT email
FROM A_MEMBER 
WHERE EMAIL = #{email} AND DEL != 1
</select>
<!-- 기업회원 이메일 체크 -->
<select id="emailCheckC" parameterType="model.CMemberDto" resultType="model.CMemberDto">
SELECT email
FROM C_MEMBER 
WHERE EMAIL = #{email} AND DEL != 1
</select>
<!-- 일반회원 로그인 정보(세션에 담을용) -->
 <select id="getLoginInfo" parameterType="model.AMemberDto" resultType="model.AMemberDto">
SELECT SEQ, EMAIL, NAME, PASSWORD, DEL
FROM A_MEMBER 
WHERE EMAIL = #{email}  AND DEL != 1
 </select>
 <!-- 일반회원가입 -->
 <select id="memberJoin">
 INSERT INTO A_MEMBER ( EMAIL, PASSWORD, NAME, DEL, SIGNDATE, OPEN )
 VALUES ( #{email }, #{password}, #{name}, -1, SYSDATE(), 0)
 </select>
<!-- 기업 로그인 정보(세션에 담을용) -->
 <select id="getLoginInfoForCompany" parameterType="model.CMemberDto" resultType="model.CMemberDto">
SELECT SEQ, EMAIL, NAME, PRESIDENT, PASSWORD, DEL, NUMBER, ADDRESS
FROM C_MEMBER
WHERE EMAIL = #{email} AND DEL != 1
 </select>
<!-- 기업  회원가입  -->
 <insert id="companyJoin" parameterType="model.CMemberDto">
 INSERT INTO C_MEMBER ( EMAIL, PASSWORD, PRESIDENT, NAME, DEPARTMENT, TYPE, NUMBER, TEL, DEL, SIGNDATE, ADDRESS )
 VALUES ( #{email}, #{password}, #{president}, #{name}, #{department}, #{type}, #{number}, #{tel}, -1, SYSDATE(), '' )
 </insert>
<!-- 일반 회원 이메일 인증 -->
<update id="AMemberValidate" parameterType="model.AMemberDto">
UPDATE A_MEMBER
SET DEL = 0 
WHERE EMAIL = #{email}
</update>
<!-- 기업 회원 이메일 인증 -->
<update id="CMemberValidate" parameterType="model.CMemberDto">
UPDATE C_MEMBER
SET DEL = 0 
WHERE EMAIL = #{email}
</update>

<!-- 일반회원 비밀번호 불러오기 -->
 <select id="getPasswordA" parameterType="int" resultType="String" >
 SELECT PASSWORD 
 FROM A_MEMBER
 WHERE SEQ = ${seq}
 </select>
 
<!-- 기업회원 비밀번호 불러오기 -->
 <select id="getPasswordC" parameterType="int" resultType="String" >
 SELECT PASSWORD 
 FROM C_MEMBER
 WHERE SEQ = ${seq}
 </select>
 <!-- 일반회원 비밀번호 변경하기 -->
 <update id="updatePasswordA" parameterType="model.AMemberDto">
 UPDATE A_MEMBER
 SET PASSWORD = #{password}
 WHERE SEQ = ${seq}
 </update>
 <!-- 기업회원 비밀번호 변경하기 -->
 <update id="updatePasswordC" parameterType="model.CMemberDto">
 UPDATE C_MEMBER
 SET PASSWORD = #{password}
 WHERE SEQ = ${seq}
 </update>
 <!-- 일반회원 탈퇴하기  -->
 <update id="withdrawMemberA" parameterType="int">
 UPDATE A_MEMBER
 SET DEL = 1, SIGNDATE = NOW()
 WHERE SEQ = ${seq}
 </update>
 
 <!-- 기업회원 탈퇴하기  -->
 <update id="withdrawMemberC" parameterType="int">
 UPDATE C_MEMBER
 SET DEL = 1, SIGNDATE = NOW()
 WHERE SEQ = ${seq}
 </update>
 
 <!-- 일반회원 이메일 찾기 -->
 <select id="getLostEmailA" parameterType="model.AMemberDto" resultType="int">
 SELECT COUNT(*)
 FROM A_MEMBER
 WHERE EMAIL = #{email} AND NAME = #{name} AND DEL != 1
 </select>
 
 <!-- 일반회원 이메일 찾기2 -->
 <select id="getLostEmailA2" parameterType="model.AMemberDto" resultType="int">
 SELECT COUNT(*)
 FROM A_MEMBER
 WHERE EMAIL = #{email} AND DEL != 1
 </select>
 
<!-- 일반회원 비밀번호 분실시 이메일로 변경하기 -->
 <update id="changePwdWithCodeA" parameterType="model.AMemberDto">
 UPDATE A_MEMBER
 SET PASSWORD = #{password}
 WHERE email = #{email}
 </update>
 
 
 <!-- 기업회원 이메일 찾기 -->
 <select id="getLostEmailC" parameterType="model.CMemberDto" resultType="int">
 SELECT COUNT(*)
 FROM C_MEMBER
 WHERE EMAIL = #{email} AND NUMBER = ${number} AND DEL != 1
 </select>
  <!-- 기업회원 이메일 찾기2 -->
 <select id="getLostEmailC2" parameterType="model.CMemberDto" resultType="int">
 SELECT COUNT(*)
 FROM C_MEMBER
 WHERE EMAIL = #{email} AND DEL != 1
 </select>
 <!-- 기업회원 비밀번호 분실시 이메일로 변경하기 -->
 <update id="changePwdWithCodeC" parameterType="model.CMemberDto">
 UPDATE C_MEMBER
 SET PASSWORD = #{password}
 WHERE email = #{email}
 </update>
 
 <!-- 기업 사업자번호 변경하기 -->
 <update id="changeCompanyNumber" parameterType="model.CMemberDto">
 UPDATE C_MEMBER
 SET NUMBER = ${number}
 WHERE email = #{email}
 </update>
 
</mapper>


