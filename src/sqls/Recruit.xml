<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="Recruit">
<!-- 마지막 시퀀스 뽑아내기 -->
	<select id="getLastSeq" resultType="int">
	SELECT LAST_INSERT_ID()
	</select>
 	<select id="recGetRef" resultType="int">
 		SELECT IFNULL(MAX(REF),0)+1 FROM RECRUIT
 	</select>
	<insert id="recInsert" parameterType="model.RecruitDto">
		INSERT INTO RECRUIT(COMSEQ, COMNAME, TITLE, COMJOB1, COMJOB2, COMJOBTYPE,
		MAINTASK, WORKINGFORM, REQUIREMENTS, SALARY,
 		CONTENT, HASHTAG, WDATE, EDATE, REF, READCOUNT, DEL, IMAGENAME)
		VALUES (#{comSeq}, #{comName}, #{title}, #{comJob1}, #{comJob2}, #{comJobType},
		#{mainTask}, #{workingForm}, #{requirements}, #{salary},
		#{content}, #{hashTag}, SYSDATE(), #{edate}, #{ref}, 0, 0, #{imagename} )
	</insert>
	<insert id="recUpfile" parameterType="model.FilesDto">
		INSERT INTO FILES (USETABLE, ORIGINNAME, NEWNAME, PATH, DEL, REF, STEP, FILETYPE )
		VALUES ( 'RECRUIT', #{originname}, #{newname}, 'upload/recruit/', 0, #{ref}, #{step}, #{filetype} )
	</insert> 
	<!-- ================= recruit 테이블 imagename 을 originname -> newname 으로 바꾸기 -->
	<update id="imageNameUpdate" parameterType="int">
		UPDATE RECRUIT R
		SET IMAGENAME=(SELECT NEWNAME FROM FILES F WHERE R.SEQ = F.REF AND USETABLE = 'RECRUIT' AND F.STEP=0 )
		WHERE R.SEQ=#{ref}
	</update>
	<!-- 채용탐색글 수 count -->
	<select id="getCountRec" resultType="int">
		SELECT IFNULL(COUNT(*),0) AS CNT FROM RECRUIT WHERE DEL=0
	</select>
	<!-- (기업) 현재 공고중인 게시글 수 count -->
	<select id="getComRecCount" resultType="int">
		SELECT IFNULL(COUNT(*),0) AS CNT FROM RECRUIT WHERE COMSEQ=#{comSeq} AND DEL=0
	</select>
	<!-- (기업) 공고종료된 게시글 수 count -->
	<select id="getComPastCount" resultType="int">
		SELECT IFNULL(COUNT(*),0) AS CNT FROM RECRUIT WHERE COMSEQ=#{comSeq} AND DEL=1
	</select>
	
	<!-- 채용탐색 들어가자마자 뿌려지는 전체 LIST(페이징)-->
 	<select id="getRecAllList" parameterType="model.RecruitParam" resultType="model.RecruitDto">
		SELECT SEQ, COMSEQ, COMNAME, TITLE, COMJOBTYPE, WDATE,EDATE, REF, READCOUNT, IMAGENAME
		FROM ( SELECT * FROM RECRUIT WHERE DEL=0 ORDER BY SEQ DESC) R
		LIMIT #{recordCountPerPage} OFFSET #{start}
	</select> 
	<!-- 기업만 볼수있는 채용공고 list (현재공고) -->
	<select id="getMyRecruitNow" parameterType="model.RecruitParam" resultType="model.RecruitDto">
		SELECT SEQ, COMSEQ, COMNAME, TITLE, COMJOBTYPE, WDATE,EDATE, REF, READCOUNT, IMAGENAME
		FROM ( SELECT * FROM RECRUIT WHERE COMSEQ=#{comSeq} AND DEL=0 ORDER BY SEQ DESC) R
		LIMIT #{recordCountPerPage} OFFSET #{start}
	</select> 
	<!-- 기업만 볼수 있는 지난공고 list -->
	<select id="getMyRecruitPast" parameterType="model.RecruitParam" resultType="model.RecruitDto">
		SELECT SEQ, COMSEQ, COMNAME, TITLE, COMJOBTYPE, WDATE,EDATE, REF, READCOUNT, IMAGENAME
		FROM ( SELECT * FROM RECRUIT WHERE COMSEQ=#{comSeq} AND DEL=1 ORDER BY SEQ DESC) R
		LIMIT #{recordCountPerPage} OFFSET #{start}
	</select> 
	<!-- detail -->
	<select id="getRecruitDetail" parameterType="int" resultType="model.RecruitDto">
		SELECT SEQ, COMSEQ, COMNAME, TITLE, COMJOB1, COMJOB2, COMJOBTYPE, MAINTASK, WORKINGFORM, REQUIREMENTS, SALARY, CONTENT, HASHTAG, WDATE,EDATE, REF, READCOUNT, DEL, IMAGENAME
		FROM RECRUIT 
		WHERE SEQ=#{seq}
	</select> 
	<!-- readcount ++ -->
	<update id="readCountUp" parameterType="int">
		UPDATE RECRUIT
		SET READCOUNT = READCOUNT+1
		WHERE SEQ=#{seq}
	</update>
	<!-- 기업 주소 가져오는 함수 -->
	<select id="getAddr" parameterType="int" resultType="model.CMemberDto">
		SELECT DEPARTMENT, ADDRESS FROM C_MEMBER
  		WHERE SEQ=#{seq}
	</select>
	<!-- ref가 동일한 이미지 가져오기 -->
	<select id="getRecFile" parameterType="int" resultType="model.FilesDto">
		SELECT SEQ, USETABLE, ORIGINNAME, NEWNAME, PATH, DEL, REF, STEP, FILETYPE
		FROM FILES 
		WHERE USETABLE='RECRUIT' AND REF=${ref}
	</select> 
	<!-- 공고 마감하기 -->
	<update id="delRecruit" parameterType="int">
		UPDATE RECRUIT
		SET DEL=1
		WHERE SEQ=#{seq}
	</update>
	<!-- 공고 update -->
	<update id="recUpdate" parameterType="model.RecruitDto">
		UPDATE RECRUIT
		SET TITLE=#{title}, COMJOB1=#{comJob1}, COMJOB2=#{comJob2}, COMJOBTYPE=#{comJobType},
		 MAINTASK=#{mainTask}, WORKINGFORM=#{workingForm}, REQUIREMENTS= #{requirements},
		 SALARY=#{salary}, CONTENT=#{content}, HASHTAG=#{hashTag}, EDATE=#{edate}, IMAGENAME=#{imagename}
		WHERE SEQ=#{seq}
	</update>
	<!-- 공고 UPDATE 할때 파일 테이블 DELETE -->
	<delete id="delRecFile" parameterType="int">
		DELETE FROM FILES
		WHERE USETABLE='RECRUIT' AND REF = #{ref} 
	</delete>
	<!-- 마감일이 오늘날짜보다 지났을때 공고마감 del=1  -->
	<update id="dayUpdateDel">
		<![CDATA[
			UPDATE RECRUIT SET DEL=1
			WHERE CURDATE() > DATE_FORMAT(EDATE,'%Y-%m-%d')	
		]]>
	</update>

	<!-- 해야할것 : (통계)해당 게시물 좋아요수 count -->
	<!-- 해야할것 : (검색) --> 
	<!-- 해야할것 : (필터) -->
	
	
	
	
	<!-- @@@@ 지원하기부분 @@@@ -->
	<!-- 이력서 목록 불러오기 -->
	<select id="getMyResumes" parameterType="int" resultType="model.ResumeDto">
	SELECT SEQ, NAME FROM RESUME
	WHERE MEMSEQ = ${seq} AND DEL != 1
	</select>
	<!-- 제출할 지원서 불러오기  -->
	<select id="getApplyResume" parameterType="model.ResumeDto" resultType="model.ResumeDto">
	SELECT * FROM RESUME
	WHERE SEQ = ${seq} AND MEMSEQ = ${memSeq}
	</select>
 </mapper>